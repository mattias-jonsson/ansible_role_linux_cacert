---

- name: Ensure that destination certificate folder exists.
  become: true
  ansible.builtin.file:
    path: '{{ ansible_role_linux_cacert_dest_path }}'
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Add certificates.
  become: true
  ansible.builtin.copy:
    src: '{{ item | basename }}'
    dest: '{{ ansible_role_linux_cacert_dest_path }}'
    owner: root
    group: root
    mode: '0755'
  with_items: '{{ ansible_role_linux_cacert_list }}'
  notify: Update cacerts

- name: Black-list operations on supported distributions.
  when: ansible_os_family == "RedHat"
  block:
    - name: Ensure that destination blacklist folder exists.
      become: true
      ansible.builtin.file:
        path: '{{ ansible_role_linux_cacert_blacklist_dest_path }}'
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Add cert to blacklist on RedHat distributions.
      become: true
      ansible.builtin.copy:
        src: '{{ item | basename }}'
        dest: '{{ ansible_role_linux_cacert_blacklist_dest_path }}'
        owner: root
        group: root
        mode: '0755'
      with_items: '{{ ansible_role_linux_cacert_blacklist }}'
      notify: Update cacerts


- name: Cleanup block.
  when: ansible_role_linux_cacert_cleanup | bool
  block:
    - name: Build list of unwanted installed certificates.
      become: true
      ansible.builtin.find:
        path:
          - '{{ ansible_role_linux_cacert_dest_path }}'
        file_type: file
        pattern: '.*'
        use_regex: true
        excludes: '{{ ansible_role_linux_cacert_list }}'
      register: ansible_role_linux_cacert_unwanted_ca_certs_find

    - name: Remove unwanted files from {{ ansible_role_linux_cacert_dest_path }}.
      become: true
      ansible.builtin.file:
        path: "{{ item['path'] }}"
        state: absent
      loop: "{{ ansible_role_linux_cacert_unwanted_ca_certs_find['files'] }}"
      notify: Update cacerts
